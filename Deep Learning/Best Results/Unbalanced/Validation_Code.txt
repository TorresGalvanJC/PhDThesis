    %% Classify the validation images using the fine-tuned network.
    
    [predictedLabels, scores] = classify(netTransfer,validationImages,'ExecutionEnvironment','cpu');
    accuracy = mean(predictedLabels == validationImages.Labels);
    targets = grp2idx(validationImages.Labels);
    targets(targets==2) = 0;
    targets = ~targets;
    outputs = grp2idx(predictedLabels);
    outputs(outputs==2) = 0;
    outputs = ~outputs;
    [c,cm,ind,per] = confusion(targets', outputs');
    
    Confusion_Matrix=figure; plotconfusion(targets', outputs');
    
    %%
    
    addpath(genpath(resultsFolder))
    cp = my_classperf(cm);
    ROC_1=figure; plotroc(targets', scores(:,2)');
    
    [X,Y,T,AUC,OPTROCPT,SUBY,SUBYNAMES] = perfcurve(targets', scores(:,2)',1,...
        'NBoot',1000,'TVals',0:0.05:1);
    ROC_2=figure; errorbar(X(:,3),Y(:,1),Y(:,1)-Y(:,2),Y(:,3)-Y(:,1));
    TheTableNice = table(validationImages.Labels,predictedLabels,'VariableNames',{'Actual','Predicted'});
    Confusion_Matrix1 = figure;
    PrettyCM = heatmap(TheTableNice,'Predicted','Actual');
          
        TrainingNeuNetw = findall(groot, 'Type', 'Figure');
        
       